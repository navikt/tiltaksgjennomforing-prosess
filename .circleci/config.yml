version: 2.1

jobs:
  bygg:
    docker:
      - image: circleci/openjdk:12
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      - run:
          name: Bygger med Maven
          command: mvn clean package -P-kopier-dependencies
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - setup_remote_docker
      - run:
          name: Bygger Docker image
          command: docker build -t "navikt/tiltaksgjennomforing-prosess:$CIRCLE_SHA1" .
      - run:
          name: Pusher Docker image
          command: |
            echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
            docker push "navikt/tiltaksgjennomforing-prosess:$CIRCLE_SHA1"

  deploy-til-dev:
    docker:
      - image: "navikt/deployment-cli:v0.1.5"
    steps:
      - checkout
      - deploy:
          miljo: "dev-fss"
  deploy-til-prod:
    docker:
      - image: "navikt/deployment-cli:v0.1.5"
    steps:
      - checkout
      - deploy:
          miljo: "prod-fss"

commands:
  deploy:
    description: "Deploy til et gitt miljø"
    parameters:
      miljo:
        type: string
    steps:
      - run: # Brukernavn og passord til Github ligger i miljøvariable DEPLOYMENT_USERNAME og DEPLOYMENT_PASSWORD
          name: Deploy til << parameters.miljo >>
          command: |
            deployment-cli deploy create --cluster=<< parameters.miljo >> --repository=navikt/tiltaksgjennomforing-prosess --team=teamtag --resource=naiserator.yaml --version=$CIRCLE_SHA1 --vars=nais/<< parameters.miljo >>.json

workflows:
  version: 2.1
  bygg-og-deploy:
    jobs:
      - bygg

      # På branch kreves det approval for å deploye til dev-fss
      - godkjenn-deploy-til-dev:
          type: approval
          requires:
            - bygg
          filters:
            branches:
              ignore:
                - master
      - deploy-til-dev:
          requires:
            - godkjenn-deploy-til-dev

      # På master deployes det automatisk til dev-fss
      - deploy-til-dev:
          requires:
            - bygg
          filters:
            branches:
              only:
                - master

      # På master kreves det approval for å deploye til prod-fss
      - godkjenn-deploy-til-prod:
          type: approval
          requires:
            - bygg
          filters:
            branches:
              only:
                - master
      - deploy-til-prod:
          requires:
            - godkjenn-deploy-til-prod
