name: Bygg branch og lag deployment-issue

on:
  push:
    branches:
      - '*'
      - '!master'

env:
  APP: tiltaksgjennomforing-prosess
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ github.repository }}
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  bygg:
    name: Bygg branch og lag deployment-issue
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Oppsett Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gjenopprett Maven-cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Bygg og test med Maven
        run: mvn package -B -Dsurefire.useFile=false

      - name: Sjekk om branch er oppdatert mot master
        id: sjekk-mot-master
        run: |
          git fetch origin master
          echo ::set-output name=oppdatert::$(git merge-base --is-ancestor origin/master $GITHUB_SHA && echo ja || echo nei)

      - name: Sett variable
        if: steps.sjekk-mot-master.outputs.oppdatert == 'ja'
        id: variable
        run: |
          echo ::set-output name=branch::"$(echo ${GITHUB_REF#refs/heads/})"

      - name: Bygg, tag og push Docker-image
        if: steps.sjekk-mot-master.outputs.oppdatert == 'ja'
        run: |
            docker build --tag $IMAGE .
            echo ${{ secrets.GHCR_PUSH_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_PUSH_USERNAME }} --password-stdin
            docker push $IMAGE


      - name: Lukk gamle deployment-issues
        if: steps.sjekk-mot-master.outputs.oppdatert == 'ja'
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['deploy', '${{ steps.variable.outputs.branch }}']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      - name: Ny deployment-issue
        if: steps.sjekk-mot-master.outputs.oppdatert == 'ja'
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Bygg av ${{ steps.variable.outputs.branch }}',
              body: 'Kommenter med \n\n>/deploy ${{ steps.variable.outputs.branch }}\n\n for Ã¥ deploye til dev-fss.\n\nCommit: ${{ github.sha }}',
              labels: ['deploy', '${{ steps.variable.outputs.branch }}'],
              assignees: ['${{ github.actor }}']
            })